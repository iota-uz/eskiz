/*
СМС шлюз от Eskiz.uz

Отправляйте СМС по всему миру, в любом количестве!  В тестовом статусе для отправки тестовых смс сообщений, Вы можете использовать только нижеуказанные тексты:  - Это тест от Eskiz      - Bu Eskiz dan test      - This is test from Eskiz

API version: 1.0.0
Contact: danil@iota.uz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eskizapi

import (
	"encoding/json"
)

// checks if the SendSmsBatchRequestMessagesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendSmsBatchRequestMessagesInner{}

// SendSmsBatchRequestMessagesInner struct for SendSmsBatchRequestMessagesInner
type SendSmsBatchRequestMessagesInner struct {
	Text      *string  `form:"text" json:"text,omitempty"`
	To        *float64 `form:"to" json:"to,omitempty"`
	UserSmsId *string  `form:"user_sms_id" json:"user_sms_id,omitempty"`
}

// NewSendSmsBatchRequestMessagesInner instantiates a new SendSmsBatchRequestMessagesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendSmsBatchRequestMessagesInner() *SendSmsBatchRequestMessagesInner {
	this := SendSmsBatchRequestMessagesInner{}
	return &this
}

// NewSendSmsBatchRequestMessagesInnerWithDefaults instantiates a new SendSmsBatchRequestMessagesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendSmsBatchRequestMessagesInnerWithDefaults() *SendSmsBatchRequestMessagesInner {
	this := SendSmsBatchRequestMessagesInner{}
	return &this
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *SendSmsBatchRequestMessagesInner) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendSmsBatchRequestMessagesInner) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *SendSmsBatchRequestMessagesInner) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *SendSmsBatchRequestMessagesInner) SetText(v string) {
	o.Text = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *SendSmsBatchRequestMessagesInner) GetTo() float64 {
	if o == nil || IsNil(o.To) {
		var ret float64
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendSmsBatchRequestMessagesInner) GetToOk() (*float64, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *SendSmsBatchRequestMessagesInner) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given float64 and assigns it to the To field.
func (o *SendSmsBatchRequestMessagesInner) SetTo(v float64) {
	o.To = &v
}

// GetUserSmsId returns the UserSmsId field value if set, zero value otherwise.
func (o *SendSmsBatchRequestMessagesInner) GetUserSmsId() string {
	if o == nil || IsNil(o.UserSmsId) {
		var ret string
		return ret
	}
	return *o.UserSmsId
}

// GetUserSmsIdOk returns a tuple with the UserSmsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendSmsBatchRequestMessagesInner) GetUserSmsIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserSmsId) {
		return nil, false
	}
	return o.UserSmsId, true
}

// HasUserSmsId returns a boolean if a field has been set.
func (o *SendSmsBatchRequestMessagesInner) HasUserSmsId() bool {
	if o != nil && !IsNil(o.UserSmsId) {
		return true
	}

	return false
}

// SetUserSmsId gets a reference to the given string and assigns it to the UserSmsId field.
func (o *SendSmsBatchRequestMessagesInner) SetUserSmsId(v string) {
	o.UserSmsId = &v
}

func (o SendSmsBatchRequestMessagesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendSmsBatchRequestMessagesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.UserSmsId) {
		toSerialize["user_sms_id"] = o.UserSmsId
	}
	return toSerialize, nil
}

type NullableSendSmsBatchRequestMessagesInner struct {
	value *SendSmsBatchRequestMessagesInner
	isSet bool
}

func (v NullableSendSmsBatchRequestMessagesInner) Get() *SendSmsBatchRequestMessagesInner {
	return v.value
}

func (v *NullableSendSmsBatchRequestMessagesInner) Set(val *SendSmsBatchRequestMessagesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSendSmsBatchRequestMessagesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSendSmsBatchRequestMessagesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendSmsBatchRequestMessagesInner(val *SendSmsBatchRequestMessagesInner) *NullableSendSmsBatchRequestMessagesInner {
	return &NullableSendSmsBatchRequestMessagesInner{value: val, isSet: true}
}

func (v NullableSendSmsBatchRequestMessagesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendSmsBatchRequestMessagesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
