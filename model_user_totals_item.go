/*
СМС шлюз от Eskiz.uz

Отправляйте СМС по всему миру, в любом количестве!  В тестовом статусе для отправки тестовых смс сообщений, Вы можете использовать только нижеуказанные тексты:  - Это тест от Eskiz      - Bu Eskiz dan test      - This is test from Eskiz

API version: 1.0.0
Contact: danil@iota.uz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eskizapi

import (
	"encoding/json"
)

// checks if the UserTotalsItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserTotalsItem{}

// UserTotalsItem struct for UserTotalsItem
type UserTotalsItem struct {
	Status  *string `form:"status" json:"status,omitempty"`
	Month   *string `form:"month" json:"month,omitempty"`
	Packets *int    `form:"packets" json:"packets,omitempty"`
}

// NewUserTotalsItem instantiates a new UserTotalsItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserTotalsItem() *UserTotalsItem {
	this := UserTotalsItem{}
	return &this
}

// NewUserTotalsItemWithDefaults instantiates a new UserTotalsItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserTotalsItemWithDefaults() *UserTotalsItem {
	this := UserTotalsItem{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UserTotalsItem) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserTotalsItem) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UserTotalsItem) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UserTotalsItem) SetStatus(v string) {
	o.Status = &v
}

// GetMonth returns the Month field value if set, zero value otherwise.
func (o *UserTotalsItem) GetMonth() string {
	if o == nil || IsNil(o.Month) {
		var ret string
		return ret
	}
	return *o.Month
}

// GetMonthOk returns a tuple with the Month field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserTotalsItem) GetMonthOk() (*string, bool) {
	if o == nil || IsNil(o.Month) {
		return nil, false
	}
	return o.Month, true
}

// HasMonth returns a boolean if a field has been set.
func (o *UserTotalsItem) HasMonth() bool {
	if o != nil && !IsNil(o.Month) {
		return true
	}

	return false
}

// SetMonth gets a reference to the given string and assigns it to the Month field.
func (o *UserTotalsItem) SetMonth(v string) {
	o.Month = &v
}

// GetPackets returns the Packets field value if set, zero value otherwise.
func (o *UserTotalsItem) GetPackets() int {
	if o == nil || IsNil(o.Packets) {
		var ret int
		return ret
	}
	return *o.Packets
}

// GetPacketsOk returns a tuple with the Packets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserTotalsItem) GetPacketsOk() (*int, bool) {
	if o == nil || IsNil(o.Packets) {
		return nil, false
	}
	return o.Packets, true
}

// HasPackets returns a boolean if a field has been set.
func (o *UserTotalsItem) HasPackets() bool {
	if o != nil && !IsNil(o.Packets) {
		return true
	}

	return false
}

// SetPackets gets a reference to the given int and assigns it to the Packets field.
func (o *UserTotalsItem) SetPackets(v int) {
	o.Packets = &v
}

func (o UserTotalsItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserTotalsItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Month) {
		toSerialize["month"] = o.Month
	}
	if !IsNil(o.Packets) {
		toSerialize["packets"] = o.Packets
	}
	return toSerialize, nil
}

type NullableUserTotalsItem struct {
	value *UserTotalsItem
	isSet bool
}

func (v NullableUserTotalsItem) Get() *UserTotalsItem {
	return v.value
}

func (v *NullableUserTotalsItem) Set(val *UserTotalsItem) {
	v.value = val
	v.isSet = true
}

func (v NullableUserTotalsItem) IsSet() bool {
	return v.isSet
}

func (v *NullableUserTotalsItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserTotalsItem(val *UserTotalsItem) *NullableUserTotalsItem {
	return &NullableUserTotalsItem{value: val, isSet: true}
}

func (v NullableUserTotalsItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserTotalsItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
