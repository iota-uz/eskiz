/*
СМС шлюз от Eskiz.uz

Отправляйте СМС по всему миру, в любом количестве!  В тестовом статусе для отправки тестовых смс сообщений, Вы можете использовать только нижеуказанные тексты:  - Это тест от Eskiz      - Bu Eskiz dan test      - This is test from Eskiz

API version: 1.0.0
Contact: danil@iota.uz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eskizapi

import (
	"encoding/json"
)

// checks if the TemplatesListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplatesListResponse{}

// TemplatesListResponse struct for TemplatesListResponse
type TemplatesListResponse struct {
	Success *bool          `form:"success" json:"success,omitempty"`
	Result  []TemplateItem `form:"result" json:"result,omitempty"`
}

// NewTemplatesListResponse instantiates a new TemplatesListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplatesListResponse() *TemplatesListResponse {
	this := TemplatesListResponse{}
	return &this
}

// NewTemplatesListResponseWithDefaults instantiates a new TemplatesListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplatesListResponseWithDefaults() *TemplatesListResponse {
	this := TemplatesListResponse{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *TemplatesListResponse) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplatesListResponse) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *TemplatesListResponse) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *TemplatesListResponse) SetSuccess(v bool) {
	o.Success = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *TemplatesListResponse) GetResult() []TemplateItem {
	if o == nil || IsNil(o.Result) {
		var ret []TemplateItem
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplatesListResponse) GetResultOk() ([]TemplateItem, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *TemplatesListResponse) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []TemplateItem and assigns it to the Result field.
func (o *TemplatesListResponse) SetResult(v []TemplateItem) {
	o.Result = v
}

func (o TemplatesListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplatesListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableTemplatesListResponse struct {
	value *TemplatesListResponse
	isSet bool
}

func (v NullableTemplatesListResponse) Get() *TemplatesListResponse {
	return v.value
}

func (v *NullableTemplatesListResponse) Set(val *TemplatesListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplatesListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplatesListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplatesListResponse(val *TemplatesListResponse) *NullableTemplatesListResponse {
	return &NullableTemplatesListResponse{value: val, isSet: true}
}

func (v NullableTemplatesListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplatesListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
