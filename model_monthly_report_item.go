/*
СМС шлюз от Eskiz.uz

Отправляйте СМС по всему миру, в любом количестве!  В тестовом статусе для отправки тестовых смс сообщений, Вы можете использовать только нижеуказанные тексты:  - Это тест от Eskiz      - Bu Eskiz dan test      - This is test from Eskiz

API version: 1.0.0
Contact: danil@iota.uz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eskizapi

import (
	"encoding/json"
)

// checks if the MonthlyReportItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonthlyReportItem{}

// MonthlyReportItem struct for MonthlyReportItem
type MonthlyReportItem struct {
	Year       *int     `form:"year" json:"year,omitempty"`
	Month      *int     `form:"month" json:"month,omitempty"`
	AdParts    *int     `form:"ad_parts" json:"ad_parts,omitempty"`
	AdSpent    *float64 `form:"ad_spent" json:"ad_spent,omitempty"`
	Parts      *int     `form:"parts" json:"parts,omitempty"`
	Spent      *float64 `form:"spent" json:"spent,omitempty"`
	TotalParts *int     `form:"total_parts" json:"total_parts,omitempty"`
	TotalSpent *float64 `form:"total_spent" json:"total_spent,omitempty"`
}

// NewMonthlyReportItem instantiates a new MonthlyReportItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonthlyReportItem() *MonthlyReportItem {
	this := MonthlyReportItem{}
	return &this
}

// NewMonthlyReportItemWithDefaults instantiates a new MonthlyReportItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonthlyReportItemWithDefaults() *MonthlyReportItem {
	this := MonthlyReportItem{}
	return &this
}

// GetYear returns the Year field value if set, zero value otherwise.
func (o *MonthlyReportItem) GetYear() int {
	if o == nil || IsNil(o.Year) {
		var ret int
		return ret
	}
	return *o.Year
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyReportItem) GetYearOk() (*int, bool) {
	if o == nil || IsNil(o.Year) {
		return nil, false
	}
	return o.Year, true
}

// HasYear returns a boolean if a field has been set.
func (o *MonthlyReportItem) HasYear() bool {
	if o != nil && !IsNil(o.Year) {
		return true
	}

	return false
}

// SetYear gets a reference to the given int and assigns it to the Year field.
func (o *MonthlyReportItem) SetYear(v int) {
	o.Year = &v
}

// GetMonth returns the Month field value if set, zero value otherwise.
func (o *MonthlyReportItem) GetMonth() int {
	if o == nil || IsNil(o.Month) {
		var ret int
		return ret
	}
	return *o.Month
}

// GetMonthOk returns a tuple with the Month field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyReportItem) GetMonthOk() (*int, bool) {
	if o == nil || IsNil(o.Month) {
		return nil, false
	}
	return o.Month, true
}

// HasMonth returns a boolean if a field has been set.
func (o *MonthlyReportItem) HasMonth() bool {
	if o != nil && !IsNil(o.Month) {
		return true
	}

	return false
}

// SetMonth gets a reference to the given int and assigns it to the Month field.
func (o *MonthlyReportItem) SetMonth(v int) {
	o.Month = &v
}

// GetAdParts returns the AdParts field value if set, zero value otherwise.
func (o *MonthlyReportItem) GetAdParts() int {
	if o == nil || IsNil(o.AdParts) {
		var ret int
		return ret
	}
	return *o.AdParts
}

// GetAdPartsOk returns a tuple with the AdParts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyReportItem) GetAdPartsOk() (*int, bool) {
	if o == nil || IsNil(o.AdParts) {
		return nil, false
	}
	return o.AdParts, true
}

// HasAdParts returns a boolean if a field has been set.
func (o *MonthlyReportItem) HasAdParts() bool {
	if o != nil && !IsNil(o.AdParts) {
		return true
	}

	return false
}

// SetAdParts gets a reference to the given int and assigns it to the AdParts field.
func (o *MonthlyReportItem) SetAdParts(v int) {
	o.AdParts = &v
}

// GetAdSpent returns the AdSpent field value if set, zero value otherwise.
func (o *MonthlyReportItem) GetAdSpent() float64 {
	if o == nil || IsNil(o.AdSpent) {
		var ret float64
		return ret
	}
	return *o.AdSpent
}

// GetAdSpentOk returns a tuple with the AdSpent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyReportItem) GetAdSpentOk() (*float64, bool) {
	if o == nil || IsNil(o.AdSpent) {
		return nil, false
	}
	return o.AdSpent, true
}

// HasAdSpent returns a boolean if a field has been set.
func (o *MonthlyReportItem) HasAdSpent() bool {
	if o != nil && !IsNil(o.AdSpent) {
		return true
	}

	return false
}

// SetAdSpent gets a reference to the given float64 and assigns it to the AdSpent field.
func (o *MonthlyReportItem) SetAdSpent(v float64) {
	o.AdSpent = &v
}

// GetParts returns the Parts field value if set, zero value otherwise.
func (o *MonthlyReportItem) GetParts() int {
	if o == nil || IsNil(o.Parts) {
		var ret int
		return ret
	}
	return *o.Parts
}

// GetPartsOk returns a tuple with the Parts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyReportItem) GetPartsOk() (*int, bool) {
	if o == nil || IsNil(o.Parts) {
		return nil, false
	}
	return o.Parts, true
}

// HasParts returns a boolean if a field has been set.
func (o *MonthlyReportItem) HasParts() bool {
	if o != nil && !IsNil(o.Parts) {
		return true
	}

	return false
}

// SetParts gets a reference to the given int and assigns it to the Parts field.
func (o *MonthlyReportItem) SetParts(v int) {
	o.Parts = &v
}

// GetSpent returns the Spent field value if set, zero value otherwise.
func (o *MonthlyReportItem) GetSpent() float64 {
	if o == nil || IsNil(o.Spent) {
		var ret float64
		return ret
	}
	return *o.Spent
}

// GetSpentOk returns a tuple with the Spent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyReportItem) GetSpentOk() (*float64, bool) {
	if o == nil || IsNil(o.Spent) {
		return nil, false
	}
	return o.Spent, true
}

// HasSpent returns a boolean if a field has been set.
func (o *MonthlyReportItem) HasSpent() bool {
	if o != nil && !IsNil(o.Spent) {
		return true
	}

	return false
}

// SetSpent gets a reference to the given float64 and assigns it to the Spent field.
func (o *MonthlyReportItem) SetSpent(v float64) {
	o.Spent = &v
}

// GetTotalParts returns the TotalParts field value if set, zero value otherwise.
func (o *MonthlyReportItem) GetTotalParts() int {
	if o == nil || IsNil(o.TotalParts) {
		var ret int
		return ret
	}
	return *o.TotalParts
}

// GetTotalPartsOk returns a tuple with the TotalParts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyReportItem) GetTotalPartsOk() (*int, bool) {
	if o == nil || IsNil(o.TotalParts) {
		return nil, false
	}
	return o.TotalParts, true
}

// HasTotalParts returns a boolean if a field has been set.
func (o *MonthlyReportItem) HasTotalParts() bool {
	if o != nil && !IsNil(o.TotalParts) {
		return true
	}

	return false
}

// SetTotalParts gets a reference to the given int and assigns it to the TotalParts field.
func (o *MonthlyReportItem) SetTotalParts(v int) {
	o.TotalParts = &v
}

// GetTotalSpent returns the TotalSpent field value if set, zero value otherwise.
func (o *MonthlyReportItem) GetTotalSpent() float64 {
	if o == nil || IsNil(o.TotalSpent) {
		var ret float64
		return ret
	}
	return *o.TotalSpent
}

// GetTotalSpentOk returns a tuple with the TotalSpent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonthlyReportItem) GetTotalSpentOk() (*float64, bool) {
	if o == nil || IsNil(o.TotalSpent) {
		return nil, false
	}
	return o.TotalSpent, true
}

// HasTotalSpent returns a boolean if a field has been set.
func (o *MonthlyReportItem) HasTotalSpent() bool {
	if o != nil && !IsNil(o.TotalSpent) {
		return true
	}

	return false
}

// SetTotalSpent gets a reference to the given float64 and assigns it to the TotalSpent field.
func (o *MonthlyReportItem) SetTotalSpent(v float64) {
	o.TotalSpent = &v
}

func (o MonthlyReportItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonthlyReportItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Year) {
		toSerialize["year"] = o.Year
	}
	if !IsNil(o.Month) {
		toSerialize["month"] = o.Month
	}
	if !IsNil(o.AdParts) {
		toSerialize["ad_parts"] = o.AdParts
	}
	if !IsNil(o.AdSpent) {
		toSerialize["ad_spent"] = o.AdSpent
	}
	if !IsNil(o.Parts) {
		toSerialize["parts"] = o.Parts
	}
	if !IsNil(o.Spent) {
		toSerialize["spent"] = o.Spent
	}
	if !IsNil(o.TotalParts) {
		toSerialize["total_parts"] = o.TotalParts
	}
	if !IsNil(o.TotalSpent) {
		toSerialize["total_spent"] = o.TotalSpent
	}
	return toSerialize, nil
}

type NullableMonthlyReportItem struct {
	value *MonthlyReportItem
	isSet bool
}

func (v NullableMonthlyReportItem) Get() *MonthlyReportItem {
	return v.value
}

func (v *NullableMonthlyReportItem) Set(val *MonthlyReportItem) {
	v.value = val
	v.isSet = true
}

func (v NullableMonthlyReportItem) IsSet() bool {
	return v.isSet
}

func (v *NullableMonthlyReportItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonthlyReportItem(val *MonthlyReportItem) *NullableMonthlyReportItem {
	return &NullableMonthlyReportItem{value: val, isSet: true}
}

func (v NullableMonthlyReportItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonthlyReportItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
