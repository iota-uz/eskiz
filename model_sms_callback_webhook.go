/*
СМС шлюз от Eskiz.uz

Отправляйте СМС по всему миру, в любом количестве!  В тестовом статусе для отправки тестовых смс сообщений, Вы можете использовать только нижеуказанные тексты:  - Это тест от Eskiz      - Bu Eskiz dan test      - This is test from Eskiz

API version: 1.0.0
Contact: danil@iota.uz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eskizapi

import (
	"encoding/json"
)

// checks if the SmsCallbackWebhook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmsCallbackWebhook{}

// SmsCallbackWebhook Модель для обработки входящих webhook-уведомлений о статусе SMS от Eskiz API
type SmsCallbackWebhook struct {
	// UUID запроса, возвращаемый при отправке SMS
	RequestId *string `form:"request_id" json:"request_id,omitempty"` // UUID запроса, возвращаемый при отправке SMS
	// ID сообщения от SMS провайдера
	MessageId *string `form:"message_id" json:"message_id,omitempty"` // ID сообщения от SMS провайдера
	// Пользовательский идентификатор SMS
	UserSmsId *string `form:"user_sms_id" json:"user_sms_id,omitempty"` // Пользовательский идентификатор SMS
	// Код страны получателя
	Country *string `form:"country" json:"country,omitempty"` // Код страны получателя
	// Номер телефона получателя
	PhoneNumber *string `form:"phone_number" json:"phone_number,omitempty"` // Номер телефона получателя
	// Количество SMS частей
	SmsCount *string `form:"sms_count" json:"sms_count,omitempty"` // Количество SMS частей
	// Статус доставки SMS
	Status *string `form:"status" json:"status,omitempty"` // Статус доставки SMS
	// Дата и время получения статуса
	StatusDate *string `form:"status_date" json:"status_date,omitempty"` // Дата и время получения статуса
}

// NewSmsCallbackWebhook instantiates a new SmsCallbackWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmsCallbackWebhook() *SmsCallbackWebhook {
	this := SmsCallbackWebhook{}
	return &this
}

// NewSmsCallbackWebhookWithDefaults instantiates a new SmsCallbackWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmsCallbackWebhookWithDefaults() *SmsCallbackWebhook {
	this := SmsCallbackWebhook{}
	return &this
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *SmsCallbackWebhook) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsCallbackWebhook) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *SmsCallbackWebhook) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *SmsCallbackWebhook) SetRequestId(v string) {
	o.RequestId = &v
}

// GetMessageId returns the MessageId field value if set, zero value otherwise.
func (o *SmsCallbackWebhook) GetMessageId() string {
	if o == nil || IsNil(o.MessageId) {
		var ret string
		return ret
	}
	return *o.MessageId
}

// GetMessageIdOk returns a tuple with the MessageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsCallbackWebhook) GetMessageIdOk() (*string, bool) {
	if o == nil || IsNil(o.MessageId) {
		return nil, false
	}
	return o.MessageId, true
}

// HasMessageId returns a boolean if a field has been set.
func (o *SmsCallbackWebhook) HasMessageId() bool {
	if o != nil && !IsNil(o.MessageId) {
		return true
	}

	return false
}

// SetMessageId gets a reference to the given string and assigns it to the MessageId field.
func (o *SmsCallbackWebhook) SetMessageId(v string) {
	o.MessageId = &v
}

// GetUserSmsId returns the UserSmsId field value if set, zero value otherwise.
func (o *SmsCallbackWebhook) GetUserSmsId() string {
	if o == nil || IsNil(o.UserSmsId) {
		var ret string
		return ret
	}
	return *o.UserSmsId
}

// GetUserSmsIdOk returns a tuple with the UserSmsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsCallbackWebhook) GetUserSmsIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserSmsId) {
		return nil, false
	}
	return o.UserSmsId, true
}

// HasUserSmsId returns a boolean if a field has been set.
func (o *SmsCallbackWebhook) HasUserSmsId() bool {
	if o != nil && !IsNil(o.UserSmsId) {
		return true
	}

	return false
}

// SetUserSmsId gets a reference to the given string and assigns it to the UserSmsId field.
func (o *SmsCallbackWebhook) SetUserSmsId(v string) {
	o.UserSmsId = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *SmsCallbackWebhook) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsCallbackWebhook) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *SmsCallbackWebhook) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *SmsCallbackWebhook) SetCountry(v string) {
	o.Country = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *SmsCallbackWebhook) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsCallbackWebhook) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *SmsCallbackWebhook) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *SmsCallbackWebhook) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetSmsCount returns the SmsCount field value if set, zero value otherwise.
func (o *SmsCallbackWebhook) GetSmsCount() string {
	if o == nil || IsNil(o.SmsCount) {
		var ret string
		return ret
	}
	return *o.SmsCount
}

// GetSmsCountOk returns a tuple with the SmsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsCallbackWebhook) GetSmsCountOk() (*string, bool) {
	if o == nil || IsNil(o.SmsCount) {
		return nil, false
	}
	return o.SmsCount, true
}

// HasSmsCount returns a boolean if a field has been set.
func (o *SmsCallbackWebhook) HasSmsCount() bool {
	if o != nil && !IsNil(o.SmsCount) {
		return true
	}

	return false
}

// SetSmsCount gets a reference to the given string and assigns it to the SmsCount field.
func (o *SmsCallbackWebhook) SetSmsCount(v string) {
	o.SmsCount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SmsCallbackWebhook) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsCallbackWebhook) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SmsCallbackWebhook) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SmsCallbackWebhook) SetStatus(v string) {
	o.Status = &v
}

// GetStatusDate returns the StatusDate field value if set, zero value otherwise.
func (o *SmsCallbackWebhook) GetStatusDate() string {
	if o == nil || IsNil(o.StatusDate) {
		var ret string
		return ret
	}
	return *o.StatusDate
}

// GetStatusDateOk returns a tuple with the StatusDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmsCallbackWebhook) GetStatusDateOk() (*string, bool) {
	if o == nil || IsNil(o.StatusDate) {
		return nil, false
	}
	return o.StatusDate, true
}

// HasStatusDate returns a boolean if a field has been set.
func (o *SmsCallbackWebhook) HasStatusDate() bool {
	if o != nil && !IsNil(o.StatusDate) {
		return true
	}

	return false
}

// SetStatusDate gets a reference to the given string and assigns it to the StatusDate field.
func (o *SmsCallbackWebhook) SetStatusDate(v string) {
	o.StatusDate = &v
}

func (o SmsCallbackWebhook) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmsCallbackWebhook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestId) {
		toSerialize["request_id"] = o.RequestId
	}
	if !IsNil(o.MessageId) {
		toSerialize["message_id"] = o.MessageId
	}
	if !IsNil(o.UserSmsId) {
		toSerialize["user_sms_id"] = o.UserSmsId
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.SmsCount) {
		toSerialize["sms_count"] = o.SmsCount
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusDate) {
		toSerialize["status_date"] = o.StatusDate
	}
	return toSerialize, nil
}

type NullableSmsCallbackWebhook struct {
	value *SmsCallbackWebhook
	isSet bool
}

func (v NullableSmsCallbackWebhook) Get() *SmsCallbackWebhook {
	return v.value
}

func (v *NullableSmsCallbackWebhook) Set(val *SmsCallbackWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsCallbackWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsCallbackWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsCallbackWebhook(val *SmsCallbackWebhook) *NullableSmsCallbackWebhook {
	return &NullableSmsCallbackWebhook{value: val, isSet: true}
}

func (v NullableSmsCallbackWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsCallbackWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
