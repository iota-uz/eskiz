/*
СМС шлюз от Eskiz.uz

Отправляйте СМС по всему миру, в любом количестве!  В тестовом статусе для отправки тестовых смс сообщений, Вы можете использовать только нижеуказанные тексты:  - Это тест от Eskiz      - Bu Eskiz dan test      - This is test from Eskiz

API version: 1.0.0
Contact: danil@iota.uz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eskizapi

import (
	"encoding/json"
)

// checks if the TotalBySmscResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TotalBySmscResponse{}

// TotalBySmscResponse struct for TotalBySmscResponse
type TotalBySmscResponse struct {
	Data []SmscReportItem `form:"data" json:"data,omitempty"`
}

// NewTotalBySmscResponse instantiates a new TotalBySmscResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTotalBySmscResponse() *TotalBySmscResponse {
	this := TotalBySmscResponse{}
	return &this
}

// NewTotalBySmscResponseWithDefaults instantiates a new TotalBySmscResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTotalBySmscResponseWithDefaults() *TotalBySmscResponse {
	this := TotalBySmscResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *TotalBySmscResponse) GetData() []SmscReportItem {
	if o == nil || IsNil(o.Data) {
		var ret []SmscReportItem
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TotalBySmscResponse) GetDataOk() ([]SmscReportItem, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *TotalBySmscResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []SmscReportItem and assigns it to the Data field.
func (o *TotalBySmscResponse) SetData(v []SmscReportItem) {
	o.Data = v
}

func (o TotalBySmscResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TotalBySmscResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableTotalBySmscResponse struct {
	value *TotalBySmscResponse
	isSet bool
}

func (v NullableTotalBySmscResponse) Get() *TotalBySmscResponse {
	return v.value
}

func (v *NullableTotalBySmscResponse) Set(val *TotalBySmscResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTotalBySmscResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTotalBySmscResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTotalBySmscResponse(val *TotalBySmscResponse) *NullableTotalBySmscResponse {
	return &NullableTotalBySmscResponse{value: val, isSet: true}
}

func (v NullableTotalBySmscResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTotalBySmscResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
