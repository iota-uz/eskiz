/*
СМС шлюз от Eskiz.uz

Отправляйте СМС по всему миру, в любом количестве!  В тестовом статусе для отправки тестовых смс сообщений, Вы можете использовать только нижеуказанные тексты:  - Это тест от Eskiz      - Bu Eskiz dan test      - This is test from Eskiz

API version: 1.0.0
Contact: danil@iota.uz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eskizapi

import (
	"encoding/json"
)

// checks if the TemplateItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateItem{}

// TemplateItem struct for TemplateItem
type TemplateItem struct {
	Id           *int    `form:"id" json:"id,omitempty"`
	Template     *string `form:"template" json:"template,omitempty"`
	OriginalText *string `form:"original_text" json:"original_text,omitempty"`
	Status       *string `form:"status" json:"status,omitempty"`
}

// NewTemplateItem instantiates a new TemplateItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateItem() *TemplateItem {
	this := TemplateItem{}
	return &this
}

// NewTemplateItemWithDefaults instantiates a new TemplateItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateItemWithDefaults() *TemplateItem {
	this := TemplateItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TemplateItem) GetId() int {
	if o == nil || IsNil(o.Id) {
		var ret int
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateItem) GetIdOk() (*int, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TemplateItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int and assigns it to the Id field.
func (o *TemplateItem) SetId(v int) {
	o.Id = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *TemplateItem) GetTemplate() string {
	if o == nil || IsNil(o.Template) {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateItem) GetTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *TemplateItem) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *TemplateItem) SetTemplate(v string) {
	o.Template = &v
}

// GetOriginalText returns the OriginalText field value if set, zero value otherwise.
func (o *TemplateItem) GetOriginalText() string {
	if o == nil || IsNil(o.OriginalText) {
		var ret string
		return ret
	}
	return *o.OriginalText
}

// GetOriginalTextOk returns a tuple with the OriginalText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateItem) GetOriginalTextOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalText) {
		return nil, false
	}
	return o.OriginalText, true
}

// HasOriginalText returns a boolean if a field has been set.
func (o *TemplateItem) HasOriginalText() bool {
	if o != nil && !IsNil(o.OriginalText) {
		return true
	}

	return false
}

// SetOriginalText gets a reference to the given string and assigns it to the OriginalText field.
func (o *TemplateItem) SetOriginalText(v string) {
	o.OriginalText = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TemplateItem) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateItem) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TemplateItem) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *TemplateItem) SetStatus(v string) {
	o.Status = &v
}

func (o TemplateItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	if !IsNil(o.OriginalText) {
		toSerialize["original_text"] = o.OriginalText
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableTemplateItem struct {
	value *TemplateItem
	isSet bool
}

func (v NullableTemplateItem) Get() *TemplateItem {
	return v.value
}

func (v *NullableTemplateItem) Set(val *TemplateItem) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateItem) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateItem(val *TemplateItem) *NullableTemplateItem {
	return &NullableTemplateItem{value: val, isSet: true}
}

func (v NullableTemplateItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
