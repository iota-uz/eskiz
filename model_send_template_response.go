/*
СМС шлюз от Eskiz.uz

Отправляйте СМС по всему миру, в любом количестве!  В тестовом статусе для отправки тестовых смс сообщений, Вы можете использовать только нижеуказанные тексты:  - Это тест от Eskiz      - Bu Eskiz dan test      - This is test from Eskiz

API version: 1.0.0
Contact: danil@iota.uz
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package eskizapi

import (
	"encoding/json"
)

// checks if the SendTemplateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendTemplateResponse{}

// SendTemplateResponse struct for SendTemplateResponse
type SendTemplateResponse struct {
	Template *string `form:"template" json:"template,omitempty"`
}

// NewSendTemplateResponse instantiates a new SendTemplateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendTemplateResponse() *SendTemplateResponse {
	this := SendTemplateResponse{}
	return &this
}

// NewSendTemplateResponseWithDefaults instantiates a new SendTemplateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendTemplateResponseWithDefaults() *SendTemplateResponse {
	this := SendTemplateResponse{}
	return &this
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *SendTemplateResponse) GetTemplate() string {
	if o == nil || IsNil(o.Template) {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendTemplateResponse) GetTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *SendTemplateResponse) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *SendTemplateResponse) SetTemplate(v string) {
	o.Template = &v
}

func (o SendTemplateResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendTemplateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	return toSerialize, nil
}

type NullableSendTemplateResponse struct {
	value *SendTemplateResponse
	isSet bool
}

func (v NullableSendTemplateResponse) Get() *SendTemplateResponse {
	return v.value
}

func (v *NullableSendTemplateResponse) Set(val *SendTemplateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSendTemplateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSendTemplateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendTemplateResponse(val *SendTemplateResponse) *NullableSendTemplateResponse {
	return &NullableSendTemplateResponse{value: val, isSet: true}
}

func (v NullableSendTemplateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendTemplateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
